{_ Welcome to AvalonEdit! Use Ctrl+F to search and dot to demo text completion.}

{_ Context }
{SetState('eddi_context_last_subject', 'data_voucher')}

Keywords like void, if and else have no meaning in body text.
Literals like 2.3 and keywords like else are not colored in body text.

{_ A comment can backslash-escape \|, \{, \} and \\ }

{dump("Double-quoted string with \"escape\" codes can use 'single' quotes.")}
{dump('Single-quoted string with \'escape\' codes can use "double" quotes.')}

{set ultimateAnswer to 42}
{set approximateAnswer to 42.0001}
{set x to true}
{if 1 is true or "a" is void: yay |else: nay}

{_ test a compound if}
{if x < 3 : less than three 
  |elif x > 10 : 
  {if x > 50: an army of | else: rather many} 
  |else: a troop of
} mulefas.

{_ test for loops}
{for index, text in messages:
    Message #{index + 1}: {text}
|empty:
    Result: {when(false, "no message", "error {error.text}")}
}

{_ test Custom function name}
{if singular: voucher |else: vouchers} for {Humanise(event.amount)} credits

{_ test coloring of nested if statements}
{if len(event.rewards) = 1 && len(event.rewards[0].faction) > 0:
  {P(event.rewards[0].faction)}
|else:
  {if len(event.rewards[0].faction) > 0:
     {while cur < len(event.rewards):
        {if cur = 0:
        |elif cur < len(event.rewards) - 1:
            , 
        |else:
            and
        }
     }
  }
}

{_ issue #9: greedy matching of delimiters}
{if recommendOtherMapping || false: 
    {Pause(1500)}
    {F("Bodies to map")}
}

{_ issue #10: incorrectly highlighing keywords within words }
{set zforz to void}
{set zinz to void}
{set zwhilez to void}
{set zifz to void}
